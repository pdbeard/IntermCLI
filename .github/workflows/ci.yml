name: CI

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11, 3.12, 3.13]
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Dependency security audit
        run: |
          pip install pip-audit
          pip-audit

      - name: Run pre-commit checks
        run: |
          pre-commit run --all-files

      - name: Lint with ruff
        run: |
          ruff check tools/

      - name: Format check with black
        run: |
          black --check tools/

      - name: Run tests with coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install pytest-cov coveralls
          pytest --cov=tools --cov=shared --cov-report=term-missing --cov-report=xml
        if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'

      - name: Upload coverage to Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install coveralls
          coveralls --service=github
        if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'

  # docs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.11'

  #     - name: Install documentation dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install mkdocs mkdocs-material

  #     - name: Build documentation
  #       run: |
  #         mkdocs build --strict
